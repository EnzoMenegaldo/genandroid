[comment encoding = UTF-8 /]
[module generateNotificationHelper('http://genandroid/1.0', 'http://www.eclipse.org/emf/2002/Ecore')]
[import fr::vojtisek::genandroid::acceleo::common::commonTemplate/]

[template public generateNotificationHelper(aAndroidProject : AndroidProject)]

[file ('/src/'+aAndroidProject.packagePrefixFolder()+'/async/NotificationHelper.java', false, 'UTF-8')]
/* [aAndroidProject.fileHeader/] */
package [aAndroidProject.packagePrefix/].async;

import [aAndroidProject.packagePrefix/].R;
import android.app.Notification;
import android.app.NotificationManager;
import android.app.PendingIntent;
import android.content.Context;
import android.content.Intent;
import android.support.v4.app.NotificationCompat;

public class NotificationHelper {
    private Context mContext;
    private Intent resultIntent;
    private int NOTIFICATION_ID = 1;
    private Notification mNotification;
    private NotificationManager mNotificationManager;
    private NotificationCompat.Builder mNotifyBuilder;
    private PendingIntent mContentIntent;
    private CharSequence mContentTitle;
    
    private String maxItemToProcess = "???";

	// [protected ('notification helper additional attributes')]
	// [/protected]
    
	/** Initial text that appears in the status bar */
    private String initialTickerText;
 
	/** Full title of the notification in the pull down */
	private String notificationContentTitle;

	public NotificationHelper(Context context, String initialTickerText, String contentTitle, Intent resultIntent)
    {
        mContext = context;
        this.resultIntent = resultIntent;
		this.initialTickerText = initialTickerText;
		this.notificationContentTitle = contentTitle;
		
    }

    /**
     * Put the notification into the status bar
     */
    public void createNotification() {
        //get the notification manager
        mNotificationManager = (NotificationManager) mContext.getSystemService(Context.NOTIFICATION_SERVICE);

        //create the notification
        int icon = android.R.drawable.stat_sys_download;
        long when = System.currentTimeMillis();
        //mNotification = new Notification(icon, initialTickerText, when);
       
        
        //create the content which is shown in the notification pulldown
		// [protected ('notification helper additional status message')]
        CharSequence contentText = "0 / "+maxItemToProcess; //Text of the notification in the pull down
		// [/protected]

        //you have to set a PendingIntent on a notification to tell the system what you want it to do when the notification is selected
        mContentIntent = PendingIntent.getActivity(
        		mContext,
        		0,
        	    resultIntent,
        	    PendingIntent.FLAG_UPDATE_CURRENT
        	);

        //add the additional content and intent to the notification
       // mNotification.setLatestEventInfo(mContext, mContentTitle, contentText, mContentIntent);

        mNotifyBuilder = new NotificationCompat.Builder(mContext)
		.setWhen(System.currentTimeMillis())
		.setTicker(initialTickerText)
		.setSmallIcon(R.drawable.app_ic_launcher)
		.setContentTitle(notificationContentTitle)
		.setContentText(contentText)
		.setContentIntent(mContentIntent);
        mNotification =mNotifyBuilder.build();
        
        //make this notification appear in the 'Ongoing events' section
        mNotification.flags = Notification.FLAG_ONGOING_EVENT;

        //show the notification
        mNotificationManager.notify(NOTIFICATION_ID, mNotification);
    }

    /**
     * Receives progress updates from the background task and updates the status bar notification appropriately
     * @param percentageComplete
     */
    public void progressUpdate(int nbItemsComplete) {
        //build up the new status message

		// [protected ('notification helper additional status message')]
        CharSequence contentText = nbItemsComplete + " / " +maxItemToProcess;
		// [/protected]
        //publish it to the status bar
        //mNotification.setLatestEventInfo(mContext, mContentTitle, contentText, mContentIntent);
        //mNotificationManager.notify(NOTIFICATION_ID, mNotification);
        mNotifyBuilder.setContentText(contentText);
     // Because the ID remains unchanged, the existing notification is
        // updated.
        mNotificationManager.notify(
        		NOTIFICATION_ID,
                mNotifyBuilder.build());

    }

    /**
     * called when the background task is complete, this removes the notification from the status bar.
     * We could also use this to add a new "task complete" notification
     */
    public void completed()    {
        //remove the notification from the status bar
        mNotificationManager.cancel(NOTIFICATION_ID);
    }
    
    public String getMaxItemToProcess() {
		return maxItemToProcess;
	}

	public void setMaxItemToProcess(String maxItemToProcess) {
		this.maxItemToProcess = maxItemToProcess;
		progressUpdate(0);
	}
	
	public void setContentTitle(String contentTitle) {
		
		this.notificationContentTitle = contentTitle;
		mNotifyBuilder.setContentTitle(contentTitle);
		
        mNotificationManager.notify(
        		NOTIFICATION_ID,
                mNotifyBuilder.build());
	}

	// [protected ('notification helper additional operations')]
	// [/protected]
}
[/file]
[/template]

