[comment encoding = UTF-8 /]
[module generateXMLHelper('http://genandroid/1.0', 'http://www.eclipse.org/emf/2002/Ecore')]
[import fr::vojtisek::genandroid::acceleo::common::commonTemplate/]

[template public generateXMLHelper(anAndroidProject : AndroidProject)]

[file ('/src/'+anAndroidProject.packagePrefixFolder()+'/datamodel/xml/XMLHelper.java', false, 'UTF-8')]
/* [anAndroidProject.fileHeader/] */
package [anAndroidProject.packagePrefix/].datamodel.xml;

import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.dao.RuntimeExceptionDao;
import com.j256.ormlite.support.ConnectionSource;
import com.j256.ormlite.table.TableUtils;
import java.io.BufferedWriter;
import java.io.File;
import java.io.FileWriter;
import java.sql.SQLException;
import java.util.List;
import [anAndroidProject.packagePrefix/].datamodel.associations.*;
import [anAndroidProject.packagePrefix/].datamodel.*;
// [protected ('additional import')]
// [/protected]

/**
 * Class used to simplify the access to the XML tools in the application
 */
public class XMLHelper {
	// [protected ('additional helper code 1')]
	// [/protected]

	public static void saveDBToFile(File file,[anAndroidProject.dataModel.name.toUpperFirst()/]Helper dbContext){
		try {
			// Create file
			FileWriter fstream = new FileWriter(file);
			BufferedWriter out = new BufferedWriter(fstream);
			out.write(generateXML4DB(dbContext));
			// Close the output stream
			out.close();
		} catch (Exception e) {// Catch exception if any
			System.err.println("Error: " + e.getMessage());
		}
	}
	
	public static String generateXML4DB([anAndroidProject.dataModel.name.toUpperFirst()/]Helper dbContext){
		StringBuilder sb = new StringBuilder();
		sb.append("<[anAndroidProject.dataModel.name.toUpper()/]>");
		[let containedClasses : Bag(DataClass) = anAndroidProject.dataModel.dataClasses->selectByKind(DataClass).dataReferences->select(ref | ref.containment)->collect(ref | ref.type)]
			[for (aDataClassifer : DataClassifier | anAndroidProject.dataModel.dataClasses->select(cl | not containedClasses->includes(cl) ))] 
				[if(aDataClassifer.oclIsKindOf(DataClass))]
		sb.append("\n\t<[aDataClassifer.name.toUpper()/]S>");
		try {	
			List<[aDataClassifer.name.toUpperFirst()/]> [aDataClassifer.name.toLowerFirst()/]s = dbContext.[aDataClassifer.name.toLowerFirst()/]Dao.queryForAll();
			for([aDataClassifer.name.toUpperFirst()/]  [aDataClassifer.name.toLowerFirst()/] : [aDataClassifer.name.toLowerFirst()/]s){
				sb.append("\n");
				sb.append([aDataClassifer.name.toLowerFirst()/].toXML("\t\t", dbContext));
			}
		} catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		sb.append("\n\t</[aDataClassifer.name.toUpper()/]S>\n");
				[/if]
			[/for]
		[/let]
		sb.append("\n</[anAndroidProject.dataModel.name.toUpper()/]>");
		return sb.toString();
	}
	
	// [protected ('additional helper code 2')]
	// [/protected]
}
[/file]
[/template]

