[comment encoding = UTF-8 /]
[module generateEditableElementViewActivity_Class('http://genandroid/1.0', 'http://www.eclipse.org/emf/2002/Ecore')]
[import fr::vojtisek::genandroid::acceleo::common::commonTemplate/]
[import fr::vojtisek::genandroid::acceleo::common::commonActivityTemplate/]

[template public generateEditableElementViewActivity_Class(anElementViewActivity : ElementViewActivity)]

[file ('/src/'+anElementViewActivity.packagePrefixFolder()+'/activities/'+anElementViewActivity.name+'EditableElementViewActivity.java', false, 'UTF-8')]
/*******************************************************************************
 * Copyright (c) 2012 Vojtisek.
 * All rights reserved. This program and the accompanying materials
 * are made available under the terms of the Eclipse Public License v1.0
 * which accompanies this distribution, and is available at
 * http://www.eclipse.org/legal/epl-v10.html
 * 
 * Contributors:
 *     Didier Vojtisek - initial API and implementation
 *******************************************************************************/
package [anElementViewActivity.packagePrefix()/].activities;


import [anElementViewActivity.packagePrefix()/].datamodel.[anElementViewActivity.element.eClass.name/];
import [anElementViewActivity.packagePrefix()/].datamodel.OrmLiteDBHelper;
import [anElementViewActivity.packagePrefix()/].R;

import android.app.Activity;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.util.Log;
import android.view.KeyEvent;
import android.view.Menu;
import android.view.MenuItem;
import android.view.View;
import android.view.View.OnKeyListener;
import android.widget.AdapterView;
import android.widget.AdapterView.OnItemClickListener;
import android.widget.EditText;
import android.widget.ListView;
import android.widget.Toast;
import com.j256.ormlite.android.apptools.OrmLiteBaseActivity;
import com.j256.ormlite.dao.RuntimeExceptionDao;


public class [anElementViewActivity.name/]EditableElementViewActivity extends OrmLiteBaseActivity<OrmLiteDBHelper>{
	
	protected int currentEntryId;
	protected [anElementViewActivity.element.eClass.name.toUpperFirst()/] currentEntry;
	protected RuntimeExceptionDao<[anElementViewActivity.element.eClass.name/], Integer> entriesDao;
	
	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.[anElementViewActivity.name.toLower()/]_editableelementview);
        currentEntryId = getIntent().getExtras().getInt("[anElementViewActivity.element.eClass.name.toLowerFirst()/]Id");	
        entriesDao = getHelper().get[anElementViewActivity.element.eClass.name.toUpperFirst()/]Dao();
        currentEntry = entriesDao.queryForId(currentEntryId);


		// capture edition event in the EditText of the view
	[for (dataAtt : DataAttribute | anElementViewActivity.element.dataAttributes)]
		[if ((dataAtt.eAttribute.eType.instanceClassName = 'java.lang.String') or
			(dataAtt.eAttribute.eType.instanceClassName = 'int')) 
		]
		final EditText [dataAtt.eAttribute.name.toLower()/]ET = (EditText) findViewById(R.id.[anElementViewActivity.name.toLower()/]_editableelementview_[dataAtt.eAttribute.name.toLower()/]);
        [dataAtt.eAttribute.name.toLower()/]ET.setOnKeyListener(new OnKeyListener() {
            public boolean onKey(View v, int keyCode, KeyEvent event) {
                // If the event is a key-down event on the "enter" button
                if ((event.getAction() == KeyEvent.ACTION_DOWN) &&
                    (keyCode == KeyEvent.KEYCODE_ENTER)) {
                  // Perform action on key press
                	currentEntry.set[dataAtt.eAttribute.name.toUpperFirst()/]([dataAtt.eAttribute.name.toLower()/]ET.getText().toString());
                	entriesDao.update(currentEntry);
                  return true;
                }
                return false;
            }
        });
		[/if]
	[/for]
        
    }
    
    @Override
	protected void onResume() {
		super.onResume();
		refreshScreenData();
	}
    
    
    private void refreshScreenData() {
    	// get our dao
    	RuntimeExceptionDao<[anElementViewActivity.element.eClass.name/], Integer> entriesDao = getHelper().get[anElementViewActivity.element.eClass.name/]Dao();
    	[anElementViewActivity.element.eClass.name/] entry = entriesDao.queryForId([anElementViewActivity.element.eClass.name.toLowerFirst()/]Id);
    	
    	[for (dataAtt : DataAttribute | anElementViewActivity.element.dataAttributes)]
    		[if (dataAtt.eAttribute.eType.instanceClassName = 'java.lang.String')]
		((TextView) findViewById(R.id.[anElementViewActivity.name.toLower()/]_editableelementview_[dataAtt.eAttribute.name.toLower()/])).setText(entry.get[dataAtt.eAttribute.name.toUpperFirst()/]());
			[elseif (dataAtt.eAttribute.eType.instanceClassName = 'int')]
		((TextView) findViewById(R.id.[anElementViewActivity.name.toLower()/]_editableelementview_[dataAtt.eAttribute.name.toLower()/])).setText(((Integer)entry.get[dataAtt.eAttribute.name.toUpperFirst()/]()).toString());					
			[/if]
    	[/for]
    	/*SimpleDateFormat dateFormatter = new SimpleDateFormat("MM/dd/yyyy HH:mm");
    	((TextView) findViewById(R.id.detail_divedate)).setText(dateFormatter.format(entry.getDate()));
    	*/
	}

	@Override
    public boolean onCreateOptionsMenu(Menu menu) {
		// add options in the menu
        [anElementViewActivity.addPreferenceInMenu()/]
		//[protected ('additional onCreateOptionsMenu')]

		//[/protected]
        return super.onCreateOptionsMenu(menu);
    }
    
    
    @Override
    public boolean onOptionsItemSelected(MenuItem item) {
    	// behavior of option menu

        
        switch (item.getItemId()) {
        [anElementViewActivity.addPreferenceMenuAction()/]
		//[protected ('additional menu action')]

		//[/protected]
        }
        return false;
    }

	private void showToast(String message) {
        Toast.makeText(this, message, Toast.LENGTH_LONG).show();
    }
}
[/file]
[/template]

